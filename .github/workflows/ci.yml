name: CI

env:
  PYTHON: Conda
  # The following is needed for Julia <=0.8.4 on Linux OS
  LD_LIBRARY_PATH: /home/runner/.julia/conda/3/x86_64/lib

  
on:
  pull_request:
    branches:
      - master
      - dev
  push:
    branches:
      - master
      - dev
    tags: '*'
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'
          - '1'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
# The following is needed for Julia <=0.8.4 on Linux OS
      - name: "Export LD_LIBRARY_PATH envrioment variable"
        if: ${{matrix.julia-version == '1.6'}}
        run: export LD_LIBRARY_PATH=$LD_LIBRARY_PATH
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
